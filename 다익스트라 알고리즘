vector<int> dijkstra(int s)
{
	vector<int> dist(n + 1, INF);
	priority_queue<pair<int, int>> pq;
	dist[s] = 0;
	pq.push({ 0,s });
	while (!pq.empty())
	{
		int here = pq.top().second;
		int cost = -pq.top().first;
		pq.pop();
		if (dist[here] < cost)continue;
		for (int i = 0; i < arr[here].size(); i++)
		{
			int there = arr[here][i].first;
			int nextcost = cost + arr[here][i].second;
			if (dist[there] > nextcost)
			{
				dist[there] = nextcost;
				pq.push({ -nextcost,there });
			}
		}
	}
	return dist;
}
