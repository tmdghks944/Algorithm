//벨만포드 : 음수사이클이 발생하면 감지하고 빈벡터를 리턴.
//시간복잡도 o(ve)
vector<int>  bellmanford(int s)
{
	vector<int> upper(v, INF);
	upper[s] = 0;
	bool isUpdate;
	for (int iter = 0; iter < N; iter++)//n번 도는게 아주 중요
	{
		isUpdate = false;//완화과정
		for (int here = 0; here < N; here++)
		{
			for (int i = 0; i < adj[here].size(); i++)
			{
				int there = adj[here][i].first;
				int nextcost = adj[here][i].second;
				if (upper[there] > upper[here] + cost)
				{
					upper[there] = upper[here] + cost;
					isUpdate = true;//완화를 했다면 true
				}
			}
		}
		if (isUpdate == false)
		{
			break;
		}
	}
	if (isUpdate == true)//n번째에도 완화가됨 -> 음수싸이클이 존재
	{
		upper.clear();//빈벡터를 리턴하게 됨
	}
	return upper;
}
